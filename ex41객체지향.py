'''
1.객체지향 프로그래밍(oop)
프로그램을 객체라는 기본 단위로 나누고 이 객체들의 상호작용으로 통해서
프로그래밍 하는 방식이다.

클래스(설계도) -> 객체(상품) = 인스턴스, 변수(색상,이름,가격 등) , 함수(기능)= 메서드
캡슐화
다형성
상속

1-1. 클래스란 
변수와 함수들을 모아 놓은 집합체.데이터형의 설계도.
멤버변수와 멤버함수가 들어간다.

- 기본 구조 
class 클래스명 : # 헤더 부분(클래스명 첫글자는 대문자!)
 멤버변수
 멤버함수

1-2. 객체 (object)
클래스를 기반으로 그대로 복제한 실체.
인스턴스 : 클래스를 호출해서 생성된 객체
속성 : 명사형태의 클래스 내에 정의된 멤버 변수 
메서드 : 동사 형태의 클래스 내의 정의된 함수


2.절차지향 프로그래밍
'''

# 1. 클래스 정의
class ClassTest1:
    a = 1  # 클래스 변수
    b = 2

    # 함수가 클래스 안으로 들어오면 method, 메서드(메소드)라고 불린다.
    def method1():
        """method1 정의"""
        print('method1()  실행!')
    
    def method2():
        """method2 정의"""
        print('method2() 실행!')

# 2. 클래스 변수 사용
# 형식: 클래스명.변수명 - 클래스 안에서 변수 안으로 들어가야 하기 때문에
print(ClassTest1.a)  # 1
print(ClassTest1.b)  # 2  

# 3. 클래스 메소드 사용
# 형식: 클래스명.메소드명()
ClassTest1.method1()
ClassTest1.method2()