# 함수
'''
한개 이상의 실행문을 묶은것.
: 만들어 놓은 실행문을 def 변수명(): 으로 생성
  변수명 () 호출가능.


함수를 실행하면 여러 개 모아놓은 명령어들이 실행된다.
프로그램에서 코드의 중복을 제거하고 재사용 하기 위해서 만든다.

함수의 종류 :
라이브러리 함수 : 파이썬을 설치하면 제공되는 함수 (print, input)
패키지 함수 : 패키지를 설치하면 제공되는 함수
사용자 정의 함수 : 사용자가 직접 만들어서 사용하는 함수

1.함수를 정의(만들다) 하다 define 
- def 함수명 (매개변수):
def 예약어를 사용.
인수를 저장할 매개변수는 괄호 안에 들어가며 입력받을 변수명을 써주고 여러개일 경우는,로 구분.
 실행문은 들여쓰기!
 매개변수 뒤에는 : 콜론 꼭!
 결과값을 호출한 곳으로 되돌려 줄 때는 return 문을 사용한다.

2.입력값은 함수를 호출할 때 함수에 전달하는 값을 말한다.
  입력값 : 인수, 인자, 아규먼트

출력값은 함수가 종료하면 호출된 쪽으로 값을 전달하는 것을 말한다.
출력값 : 리턴값

인수, 인자, argument :
- 함수로 전달되는 값을 말한다.
- 함수 호출 부분에 있다. e.g.) max(1,2), print('Hello')

매개변수, parameter : 
- 함수 내부에서 함수로 전달된 값을 저장한 변수를 말한다. 
- 함수 정의 부분에 있다.

리턴값,
리턴 값은 함수를 종료할 때 호출한 쪽으로 전달되는 값.


함수의 종료 시점
- 함수안에 실행문들이 끝난 경우
- 함수에서 리턴문을 만난 경우

함수는 정의가 먼저 나오고 호출이 나중에 나온다.
함수 호출이 먼저 나오고 함수 정의가 뒤에 오면 에러가 발생된다.
패키지에 포함된 다양한 함수를 알아야함.

'''
# 함수 정의
def function(a,b):
    c = a + b
    return c

print(function) # 메모리 주소확인

hap = function(5, 10)  # 함수 호출
print(hap)

print(function(3, 20))  # 함수 재사용

print("---함수 예제2---")

# 함수를 사용하지 않은 경우
# a = 1
# print(a)

# 함수를 사용한 경우
def myFunction():
    a = 1 
    print(a)
myFunction() #인수 없는 경우

print("----동일한 결과 : 인수 있는경우------")

def myFunction2(a): # 매개변수
    print(a)
myFunction2(1)  # 인수인자 